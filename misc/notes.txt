# Questions

Why does Function.PrintCOM works as `love.graphics.circle("fill", cm.x, cm.y, 4)` instead of `love.graphics.circle("fill", cm.x + Origin.x, cm.y + Origin.y, 4)`

Why `computeCOM` only works in `update`?

## Check if `inf` or `nan`

```
tostring(x) == 'inf'
tostring(x) == tostring(1/0)
tostring(x) == tostring(0/0)
x ~= x
```

```
print(math.sqrt(-1) ~= math.sqrt(-1))    --> true
print(math.sqrt(-1) ~= -1*math.sqrt(-2)) --> true
```


# Bugs

Can't delete functions properly
<!-- - Functions deleted are still drawn but have value `nil` thus can't have their `exp` changed -->


# TODO

Print the name of a function above it

Draw subgrids. I must create new lines or remove lines according to the zoom


# How do I wanna use

V1:
```
f(x) = sin(x) + 5
Domain(f) = "[2, 4)"
Plot(f)
```

V2:
```
f = new Function("sin(x) + 1")
f.domain = new Domain("[2, 4)", 1000)
f.plot()
```

V3:
```
f = Function.New("f", "sin(x) + 1")
f.domain = Function.NewDomain("[2, 4)", 1000)
f:plot()
```


## Tested Functions

``` lua
-- [[ CARTESIAN ]]
f = Editor.NewFunction("f", "(x-1)^2 / 8")
Editor.NewFunction("g", "sin(x) - 2")
h = Editor.NewFunction("h", "sqrt( 9 - (x)^2 )")
h.domain = Editor.NewDomain(-3, 3, 200)
-- Editor.NewFunction("i", "(x^5 - x^3 + 2*x - 4) / (x^3 - 5*x)")
Editor.NewFunction("j", "1/x")
Editor.NewFunction("k", "sin(4*x) / x ^ 2 * 2")

-- [[ POLAR ]]
p = Editor.NewFunction("p", "sin(4*x)", "polar")
p.domain = Editor.NewDomain(0, 2 * PI, 100)
p.isVisible = false

p1 = Editor.NewFunction("p1", "sin(4*x) * 6/7", "polar")
p1.domain = Editor.NewDomain(0, 2 * PI, 200)

p2 = Editor.NewFunction("p2", "sin(4*x) / 2", "polar")
p2.domain = Editor.NewDomain(0, 2 * PI, 200)

p3 = Editor.NewFunction("p3", "sin(4*x) * 3/21 ", "polar")
p3.color = Colors.Red
p3.domain = Editor.NewDomain(0, 2 * PI, 200)

q = Editor.NewFunction("q", "sin(1.25*x)", "polar")
q.domain = Editor.NewDomain(0, 2 * PI, 70)
q.isVisible = false

r = Editor.NewFunction("r", "1", "polar")
r.domain = Editor.NewDomain(0, 2*PI, 100)
r.isVisible = false

s = Editor.NewFunction("s", "(sin(x)*sqrt(abs(cos(x)))) / (sin(x) + 7/5) - 2*sin(x) + 2", "polar")
s.domain = Editor.NewDomain(0, 2*PI, 200)
-- s.isVisible = false
```


``` lua

local function TEST_FUNCTIONS()
	-- [[ CARTESIAN ]]
	f = Editor.NewFunction("f", "(x)^2")
	f.domain = Editor.NewDomain(-1, 2, 150)

	-- f = Editor.NewFunction("f", "(x-1)^2 / 8")
	-- Editor.NewFunction("g", "sin(x) - 2")
	-- h = Editor.NewFunction("h", "sqrt( 9 - (x)^2 )")
	-- h.domain = Editor.NewDomain(-3, 3, 200)
	-- Editor.NewFunction("i", "(x^5 - x^3 + 2*x - 4) / (x^3 - 5*x)")
	-- Editor.NewFunction("j", "1/x")
	-- Editor.NewFunction("k", "sin(4*x) / x ^ 2 * 2")

	-- [[ POLAR ]]
	-- p = Editor.NewFunction("p", "sin(4*x)", "polar")
	-- p.domain = Editor.NewDomain(0, 2 * PI, 200)
	-- p.isVisible = false

	-- p1 = Editor.NewFunction("p1", "sin(4*x) * 6/7", "polar")
	-- p1.domain = Editor.NewDomain(0, 2 * PI, 200)

	-- p2 = Editor.NewFunction("p2", "sin(4*x) / 2", "polar")
	-- p2.domain = Editor.NewDomain(0, 2 * PI, 200)

	-- p3 = Editor.NewFunction("p3", "sin(4*x) * 3/21 ", "polar")
	-- p3.color = Colors.Red
	-- p3.domain = Editor.NewDomain(0, 2 * PI, 200)

	-- q = Editor.NewFunction("q", "sin(1.25*x)", "polar")
	-- q.domain = Editor.NewDomain(0, 2 * PI, 70)
	-- q.isVisible = false

	r = Editor.NewFunction("r", "1", "polar")
	r.domain = Editor.NewDomain(0, 2*PI, 100)
	-- r.color = Colors.BrightGrey
	-- r.isVisible = false

	-- s = Editor.NewFunction("s", "(sin(x)*sqrt(abs(cos(x)))) / (sin(x) + 7/5) - 2*sin(x) + 2", "polar")
	-- s.domain = Editor.NewDomain(0, 2*PI, 200)
	-- s.isVisible = false
end
```
